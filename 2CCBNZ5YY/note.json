{
  "paragraphs": [
    {
      "text": "%md\n\n## Intro to Machine Learning\n#### with Linear Regression\n\n**Level**: Beginner\n**Language**: Scala\n**Requirements**: \n- [HDP 2.6](http://hortonworks.com/products/sandbox/) (or later) or [HDCloud](https://hortonworks.github.io/hdp-aws/)\n- Spark 2.x\n\n**Author**: Robert Hryniewicz\n**Follow** [@RobertH8z](https://twitter.com/RobertH8z)",
      "user": "admin",
      "dateUpdated": "Feb 23, 2017 1:40:47 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": false,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eIntro to Machine Learning\u003c/h2\u003e\n\u003ch4\u003ewith Linear Regression\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003eLevel\u003c/strong\u003e: Beginner\u003cbr/\u003e\u003cstrong\u003eLanguage\u003c/strong\u003e: Scala\u003cbr/\u003e\u003cstrong\u003eRequirements\u003c/strong\u003e:\u003cbr/\u003e- \u003ca href\u003d\"http://hortonworks.com/products/sandbox/\"\u003eHDP 2.6\u003c/a\u003e (or later) or \u003ca href\u003d\"https://hortonworks.github.io/hdp-aws/\"\u003eHDCloud\u003c/a\u003e\u003cbr/\u003e- Spark 2.x\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAuthor\u003c/strong\u003e: Robert Hryniewicz\u003cbr/\u003e\u003cstrong\u003eFollow\u003c/strong\u003e \u003ca href\u003d\"https://twitter.com/RobertH8z\"\u003e@RobertH8z\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229481_-407807426",
      "id": "20161021-175215_279569041",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "dateStarted": "Feb 23, 2017 1:40:47 AM",
      "dateFinished": "Feb 23, 2017 1:40:47 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Intro",
      "text": "%md\n\nIn this lab we\u0027ll cover basics of building a Linear Regression model using Apache Spark ML Pipeline API. \n\n- Starting from a simple 2 dim array\n- Using Pipeline API to create vectorised version of features and build the model\n- Using Pipeline API to calculate predictions\n- Exchanging data between Scala and Python pandas via TempView (new API in 2.x)\n- Simplified plotting by using pandas plot function (pandas similar as Spark DataFrame)\n- Saving and loading back the model",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {},
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIn this lab we\u0026rsquo;ll cover basics of building a Linear Regression model using Apache Spark ML Pipeline API. \u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eStarting from a simple 2 dim array\u003c/li\u003e\n  \u003cli\u003eUsing Pipeline API to create vectorised version of features and build the model\u003c/li\u003e\n  \u003cli\u003eUsing Pipeline API to calculate predictions\u003c/li\u003e\n  \u003cli\u003eExchanging data between Scala and Python pandas via TempView (new API in 2.x)\u003c/li\u003e\n  \u003cli\u003eSimplified plotting by using pandas plot function (pandas similar as Spark DataFrame)\u003c/li\u003e\n  \u003cli\u003eSaving and loading back the model\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229481_-407807426",
      "id": "20161021-175322_1250309450",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "New to Scala?",
      "text": "%md\n\nIn this lab we will use basic Scala syntax. If you would like to learn more about Scala, here\u0027s an excellent **[Tutorial](http://www.dhgarrette.com/nlpclass/scala/basics.html)**.",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {},
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIn this lab we will use basic Scala syntax. If you would like to learn more about Scala, here\u0026rsquo;s an excellent \u003cstrong\u003e\u003ca href\u003d\"http://www.dhgarrette.com/nlpclass/scala/basics.html\"\u003eTutorial\u003c/a\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229481_-407807426",
      "id": "20161021-175356_201029376",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "How to run a paragraph?",
      "text": "%md\nTo run a paragraph in a Zeppelin notebook you can either click the `play` button (blue triangle) on the right-hand side or simply press `Shift + Enter`.",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {},
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eTo run a paragraph in a Zeppelin notebook you can either click the \u003ccode\u003eplay\u003c/code\u003e button (blue triangle) on the right-hand side or simply press \u003ccode\u003eShift + Enter\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229481_-407807426",
      "id": "20161021-175756_1740792557",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "What is a model?",
      "text": "%md\n\nA **model** is a **mathematical formula** with a number of parameters that need to be learned from the data. **Fitting a model to the data** is a process known as **model training**.\n\nTake, for instance one feature/variable linear regression, where a goal is to fit a line (described by the well know eqution `y \u003d ax + b`) to a set of distributed data points.\n\nFor example, assume that once model training is complete we get a model equation `y \u003d 2x + 5`. Then for a set of inputs `[1, 0, 7, 2, …]` we would get a set of outputs `[7, 5, 19, 9, …]`. That\u0027s it!\n\nIn this notebook you will get a chance to learn a step-by-step process of training a one variable linear regression model with Spark.",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {},
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eA \u003cstrong\u003emodel\u003c/strong\u003e is a \u003cstrong\u003emathematical formula\u003c/strong\u003e with a number of parameters that need to be learned from the data. \u003cstrong\u003eFitting a model to the data\u003c/strong\u003e is a process known as \u003cstrong\u003emodel training\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTake, for instance one feature/variable linear regression, where a goal is to fit a line (described by the well know eqution \u003ccode\u003ey \u003d ax + b\u003c/code\u003e) to a set of distributed data points.\u003c/p\u003e\n\u003cp\u003eFor example, assume that once model training is complete we get a model equation \u003ccode\u003ey \u003d 2x + 5\u003c/code\u003e. Then for a set of inputs \u003ccode\u003e[1, 0, 7, 2, …]\u003c/code\u003e we would get a set of outputs \u003ccode\u003e[7, 5, 19, 9, …]\u003c/code\u003e. That\u0026rsquo;s it!\u003c/p\u003e\n\u003cp\u003eIn this notebook you will get a chance to learn a step-by-step process of training a one variable linear regression model with Spark.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229482_-406653179",
      "id": "20161021-181247_1205160838",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Why Linear Regression?",
      "text": "%md\n\nWe\u0027re introducing Machine Learning with **Linear Regression** because it\u0027s one of the more basic and **commonly used predictive analytics method**. It\u0027s also easy to explain and grasp intuitively as you\u0027ll make your way through the examples.\n\nNote, that we will not cover the details of how the underlying Linear Regression algorithm works. We will merely focus on applying the algorithm and generating a model. If you would like to learn more about Linear Regression and other algorithms check out this excellent [Coursera Machine Learning Course](https://www.coursera.org/learn/machine-learning) taught by Andrew Ng.",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe\u0026rsquo;re introducing Machine Learning with \u003cstrong\u003eLinear Regression\u003c/strong\u003e because it\u0026rsquo;s one of the more basic and \u003cstrong\u003ecommonly used predictive analytics method\u003c/strong\u003e. It\u0026rsquo;s also easy to explain and grasp intuitively as you\u0026rsquo;ll make your way through the examples.\u003c/p\u003e\n\u003cp\u003eNote, that we will not cover the details of how the underlying Linear Regression algorithm works. We will merely focus on applying the algorithm and generating a model. If you would like to learn more about Linear Regression and other algorithms check out this excellent \u003ca href\u003d\"https://www.coursera.org/learn/machine-learning\"\u003eCoursera Machine Learning Course\u003c/a\u003e taught by Andrew Ng.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229482_-406653179",
      "id": "20161021-175825_163637505",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Verify Spark version (should be 2.x)",
      "text": "%spark2.spark\n\nspark.version",
      "dateUpdated": "Mar 9, 2017 2:00:54 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229482_-406653179",
      "id": "20161023-082330_1254378286",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a small data set that we will use for our Linear Regression model",
      "text": "%spark2.spark\n\nimport org.apache.spark.ml.linalg.Vectors\n\nval data \u003d spark.createDataFrame(Seq(\n\t(-12.0,  -4.9),\n\t( -6.0,  -4.5),\n\t( -7.2,  -4.1),\n\t( -5.0,  -3.2),\n\t( -2.0,  -3.0),\n\t( -3.1,  -2.1),\n\t( -4.0,  -1.5),\n\t( -2.2,  -1.2),\n\t( -2.0,  -0.7),\n\t( 1.0,   -0.5),\n\t( -0.7,  -0.2),\n\t( 1.2,   0.1),\n\t( 2.2,   0.3),  \n\t( 6.5,   0.52),\n\t( 4.2,   0.72),\n\t( 8.6,   1.1),\n\t( 9.5,   2.3),\n\t( 14.52, 3.4),\n\t( 12.9,  3.61), \n\t( 16.3,  3.8)\n)).toDF(\"y\", \"x\")",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229482_-406653179",
      "id": "20161023-063018_227184425",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Run Linear Regression",
      "text": "%spark2.spark\n\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.regression.{LinearRegression, LinearRegressionModel}\n\n// Set Features\nval features \u003d new VectorAssembler()\n    .setInputCols(Array(\"x\"))\n    .setOutputCol(\"features\")\n\nval linreg \u003d new LinearRegression().setLabelCol(\"y\")\n  \nval pipeline \u003d new Pipeline().setStages(Array(features, linreg))\nval model \u003d pipeline.fit(data)",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229483_-407037928",
      "id": "20161023-063047_142266605",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Summarize model training",
      "text": "%spark2.spark\n\nval linRegModel \u003d model.stages(1).asInstanceOf[LinearRegressionModel]\n\nprintln(s\"RMSE:  ${linRegModel.summary.rootMeanSquaredError}\")\nprintln(s\"r2:    ${linRegModel.summary.r2}\")\nprintln(s\"Model: Y \u003d ${linRegModel.coefficients(0)} * X + ${linRegModel.intercept}\")\n\nlinRegModel.summary.residuals.show()",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229483_-407037928",
      "id": "20161023-065504_1972452148",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Use the same data to predict the model ",
      "text": "%spark2.spark\n\nval result \u003d model.transform(data).select(\"x\", \"y\", \"prediction\")\n\nresult.show()",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229483_-407037928",
      "id": "20161104-232822_1626397932",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a Temporary View",
      "text": "%spark2.spark\n\nresult.createOrReplaceTempView(\"linreg\")",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229483_-407037928",
      "id": "20161104-232946_1293428390",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save the model",
      "text": "%spark2.spark\n\nlinreg.write.overwrite().save(\"hdfs:///tmp/linregmodel\")",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229483_-407037928",
      "id": "20161019-185407_1496443931",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load back the model",
      "text": "%spark2.spark\n\nimport org.apache.spark.ml.regression.{LinearRegression, LinearRegressionModel}\n\nval sameModel \u003d LinearRegression.load(\"hdfs:///tmp/linregmodel\")\nval sameLinRegModel \u003d model.stages(1).asInstanceOf[LinearRegressionModel]\n\n// Verify coefficients and intercept\nprintln(s\"Coefficient: ${sameLinRegModel.coefficients} Intercept: ${sameLinRegModel.intercept}\")",
      "dateUpdated": "Mar 9, 2017 2:00:55 PM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "text"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229484_-408961673",
      "id": "20161019-185706_496188641",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n#### Visualise the model and training data\n\n**Note**: The following paragraphs require the Python **Pandas** library which is not installed by default. Instead, we\u0027ve ran the paragraphs for you and disabled **run** so you will avoid any errors. ",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": false,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eVisualise the model and training data\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: The following paragraphs require the Python \u003cstrong\u003ePandas\u003c/strong\u003e library which is not installed by default. Instead, we\u0026rsquo;ve ran the paragraphs for you and disabled \u003cstrong\u003erun\u003c/strong\u003e so you will avoid any errors.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229484_-408961673",
      "id": "20161104-232912_1326325430",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Convert to Pandas (requires Pandas)",
      "text": "%spark2.pyspark\n\nlinreg \u003d spark.table(\"linreg\").toPandas()\nlinreg",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "python"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "requires Pandas library\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229484_-408961673",
      "id": "20161104-233336_1115890215",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Plot the result (requires Pandas)",
      "text": "%spark2.pyspark\nimport StringIO\n\ndef show(p):\n    img \u003d StringIO.StringIO()\n    p.get_figure().savefig(img, format\u003d\u0027svg\u0027)\n    img.seek(0)\n    print \"%html \u003cdiv style\u003d\u0027width:500px\u0027\u003e\" + img.buf + \"\u003c/div\u003e\"\n\nplot \u003d linreg.plot.scatter(x\u003d\u0027x\u0027, y\u003d\u0027y\u0027)\n    \nplot.plot(linreg[\"x\"], linreg[\"prediction\"])\nshow(plot)",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "python"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv style\u003d\u0027width:500px\u0027\u003e\u003c?xml version\u003d\"1.0\" encoding\u003d\"utf-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Created with matplotlib (http://matplotlib.org/) --\u003e\n\u003csvg height\u003d\"432pt\" version\u003d\"1.1\" viewBox\u003d\"0 0 576 432\" width\u003d\"576pt\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n \u003cdefs\u003e\n  \u003cstyle type\u003d\"text/css\"\u003e\n*{stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:100000;}\n  \u003c/style\u003e\n \u003c/defs\u003e\n \u003cg id\u003d\"figure_1\"\u003e\n  \u003cg id\u003d\"patch_1\"\u003e\n   \u003cpath d\u003d\"M 0 432 \nL 576 432 \nL 576 0 \nL 0 0 \nz\n\" style\u003d\"fill:#ffffff;\"/\u003e\n  \u003c/g\u003e\n  \u003cg id\u003d\"axes_1\"\u003e\n   \u003cg id\u003d\"patch_2\"\u003e\n    \u003cpath d\u003d\"M 72 388.8 \nL 518.4 388.8 \nL 518.4 43.2 \nL 72 43.2 \nz\n\" style\u003d\"fill:#ffffff;\"/\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"PathCollection_1\"\u003e\n    \u003cdefs\u003e\n     \u003cpath d\u003d\"M 0 2.236068 \nC 0.593012 2.236068 1.161816 2.000462 1.581139 1.581139 \nC 2.000462 1.161816 2.236068 0.593012 2.236068 0 \nC 2.236068 -0.593012 2.000462 -1.161816 1.581139 -1.581139 \nC 1.161816 -2.000462 0.593012 -2.236068 0 -2.236068 \nC -0.593012 -2.236068 -1.161816 -2.000462 -1.581139 -1.581139 \nC -2.000462 -1.161816 -2.236068 -0.593012 -2.236068 0 \nC -2.236068 0.593012 -2.000462 1.161816 -1.581139 1.581139 \nC -1.161816 2.000462 -0.593012 2.236068 0 2.236068 \nz\n\" id\u003d\"m829ab69b76\" style\u003d\"stroke:#000000;\"/\u003e\n    \u003c/defs\u003e\n    \u003cg clip-path\u003d\"url(#p1be21defc0)\"\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"112.92\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"359.177142857\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"127.8\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"299.931428571\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"142.68\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"311.780571429\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"176.16\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"290.057142857\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"183.6\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"260.434285714\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"217.08\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"271.296\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"239.4\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"280.182857143\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"250.56\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"262.409142857\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"269.16\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"260.434285714\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"276.6\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"230.811428571\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"287.76\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"247.597714286\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"298.92\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"228.836571429\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"306.36\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"218.962285714\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"314.544\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"176.502857143\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"321.984\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"199.213714286\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"336.12\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"155.766857143\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"380.76\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"146.88\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"421.68\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"97.3110857143\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"429.492\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"113.307428571\"/\u003e\n     \u003cuse style\u003d\"fill:#0000ff;stroke:#000000;\" x\u003d\"436.56\" xlink:href\u003d\"#m829ab69b76\" y\u003d\"79.7348571429\"/\u003e\n    \u003c/g\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"line2d_1\"\u003e\n    \u003cpath clip-path\u003d\"url(#p1be21defc0)\" d\u003d\"M 112.92 346.363774 \nL 127.8 335.281806 \nL 142.68 324.199837 \nL 176.16 299.265408 \nL 183.6 293.724424 \nL 217.08 268.789995 \nL 239.4 252.167042 \nL 250.56 243.855565 \nL 269.16 230.003105 \nL 276.6 224.462121 \nL 287.76 216.150644 \nL 298.92 207.839168 \nL 306.36 202.298184 \nL 314.544 196.203101 \nL 321.984 190.662117 \nL 336.12 180.134247 \nL 380.76 146.888341 \nL 421.68 116.412928 \nL 429.492 110.594894 \nL 436.56 105.330959 \n\" style\u003d\"fill:none;stroke:#0000ff;stroke-linecap:square;\"/\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"patch_3\"\u003e\n    \u003cpath d\u003d\"M 72 43.2 \nL 518.4 43.2 \n\" style\u003d\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"patch_4\"\u003e\n    \u003cpath d\u003d\"M 518.4 388.8 \nL 518.4 43.2 \n\" style\u003d\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"patch_5\"\u003e\n    \u003cpath d\u003d\"M 72 388.8 \nL 518.4 388.8 \n\" style\u003d\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"patch_6\"\u003e\n    \u003cpath d\u003d\"M 72 388.8 \nL 72 43.2 \n\" style\u003d\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"matplotlib.axis_1\"\u003e\n    \u003cg id\u003d\"xtick_1\"\u003e\n     \u003cg id\u003d\"line2d_2\"\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 0 0 \nL 0 -4 \n\" id\u003d\"m4cf68ff897\" style\u003d\"stroke:#000000;stroke-width:0.5;\"/\u003e\n      \u003c/defs\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_3\"\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 0 0 \nL 0 4 \n\" id\u003d\"m57362aa611\" style\u003d\"stroke:#000000;stroke-width:0.5;\"/\u003e\n      \u003c/defs\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_1\"\u003e\n      \u003c!-- −6 --\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 10.59375 35.5 \nL 73.1875 35.5 \nL 73.1875 27.203125 \nL 10.59375 27.203125 \nz\n\" id\u003d\"BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cpath d\u003d\"M 33.015625 40.375 \nQ 26.375 40.375 22.484375 35.828125 \nQ 18.609375 31.296875 18.609375 23.390625 \nQ 18.609375 15.53125 22.484375 10.953125 \nQ 26.375 6.390625 33.015625 6.390625 \nQ 39.65625 6.390625 43.53125 10.953125 \nQ 47.40625 15.53125 47.40625 23.390625 \nQ 47.40625 31.296875 43.53125 35.828125 \nQ 39.65625 40.375 33.015625 40.375 \nM 52.59375 71.296875 \nL 52.59375 62.3125 \nQ 48.875 64.0625 45.09375 64.984375 \nQ 41.3125 65.921875 37.59375 65.921875 \nQ 27.828125 65.921875 22.671875 59.328125 \nQ 17.53125 52.734375 16.796875 39.40625 \nQ 19.671875 43.65625 24.015625 45.921875 \nQ 28.375 48.1875 33.59375 48.1875 \nQ 44.578125 48.1875 50.953125 41.515625 \nQ 57.328125 34.859375 57.328125 23.390625 \nQ 57.328125 12.15625 50.6875 5.359375 \nQ 44.046875 -1.421875 33.015625 -1.421875 \nQ 20.359375 -1.421875 13.671875 8.265625 \nQ 6.984375 17.96875 6.984375 36.375 \nQ 6.984375 53.65625 15.1875 63.9375 \nQ 23.390625 74.21875 37.203125 74.21875 \nQ 40.921875 74.21875 44.703125 73.484375 \nQ 48.484375 72.75 52.59375 71.296875 \n\" id\u003d\"BitstreamVeraSans-Roman-36\"/\u003e\n      \u003c/defs\u003e\n      \u003cg transform\u003d\"translate(63.1546875 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cuse x\u003d\"83.7890625\" xlink:href\u003d\"#BitstreamVeraSans-Roman-36\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"xtick_2\"\u003e\n     \u003cg id\u003d\"line2d_4\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"146.4\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_5\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"146.4\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_2\"\u003e\n      \u003c!-- −4 --\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 37.796875 64.3125 \nL 12.890625 25.390625 \nL 37.796875 25.390625 \nz\nM 35.203125 72.90625 \nL 47.609375 72.90625 \nL 47.609375 25.390625 \nL 58.015625 25.390625 \nL 58.015625 17.1875 \nL 47.609375 17.1875 \nL 47.609375 0 \nL 37.796875 0 \nL 37.796875 17.1875 \nL 4.890625 17.1875 \nL 4.890625 26.703125 \nz\n\" id\u003d\"BitstreamVeraSans-Roman-34\"/\u003e\n      \u003c/defs\u003e\n      \u003cg transform\u003d\"translate(137.5546875 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cuse x\u003d\"83.7890625\" xlink:href\u003d\"#BitstreamVeraSans-Roman-34\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"xtick_3\"\u003e\n     \u003cg id\u003d\"line2d_6\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"220.8\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_7\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"220.8\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_3\"\u003e\n      \u003c!-- −2 --\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 19.1875 8.296875 \nL 53.609375 8.296875 \nL 53.609375 0 \nL 7.328125 0 \nL 7.328125 8.296875 \nQ 12.9375 14.109375 22.625 23.890625 \nQ 32.328125 33.6875 34.8125 36.53125 \nQ 39.546875 41.84375 41.421875 45.53125 \nQ 43.3125 49.21875 43.3125 52.78125 \nQ 43.3125 58.59375 39.234375 62.25 \nQ 35.15625 65.921875 28.609375 65.921875 \nQ 23.96875 65.921875 18.8125 64.3125 \nQ 13.671875 62.703125 7.8125 59.421875 \nL 7.8125 69.390625 \nQ 13.765625 71.78125 18.9375 73 \nQ 24.125 74.21875 28.421875 74.21875 \nQ 39.75 74.21875 46.484375 68.546875 \nQ 53.21875 62.890625 53.21875 53.421875 \nQ 53.21875 48.921875 51.53125 44.890625 \nQ 49.859375 40.875 45.40625 35.40625 \nQ 44.1875 33.984375 37.640625 27.21875 \nQ 31.109375 20.453125 19.1875 8.296875 \n\" id\u003d\"BitstreamVeraSans-Roman-32\"/\u003e\n      \u003c/defs\u003e\n      \u003cg transform\u003d\"translate(211.9546875 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cuse x\u003d\"83.7890625\" xlink:href\u003d\"#BitstreamVeraSans-Roman-32\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"xtick_4\"\u003e\n     \u003cg id\u003d\"line2d_8\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"295.2\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_9\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"295.2\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_4\"\u003e\n      \u003c!-- 0 --\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 31.78125 66.40625 \nQ 24.171875 66.40625 20.328125 58.90625 \nQ 16.5 51.421875 16.5 36.375 \nQ 16.5 21.390625 20.328125 13.890625 \nQ 24.171875 6.390625 31.78125 6.390625 \nQ 39.453125 6.390625 43.28125 13.890625 \nQ 47.125 21.390625 47.125 36.375 \nQ 47.125 51.421875 43.28125 58.90625 \nQ 39.453125 66.40625 31.78125 66.40625 \nM 31.78125 74.21875 \nQ 44.046875 74.21875 50.515625 64.515625 \nQ 56.984375 54.828125 56.984375 36.375 \nQ 56.984375 17.96875 50.515625 8.265625 \nQ 44.046875 -1.421875 31.78125 -1.421875 \nQ 19.53125 -1.421875 13.0625 8.265625 \nQ 6.59375 17.96875 6.59375 36.375 \nQ 6.59375 54.828125 13.0625 64.515625 \nQ 19.53125 74.21875 31.78125 74.21875 \n\" id\u003d\"BitstreamVeraSans-Roman-30\"/\u003e\n      \u003c/defs\u003e\n      \u003cg transform\u003d\"translate(291.3825 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-30\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"xtick_5\"\u003e\n     \u003cg id\u003d\"line2d_10\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"369.6\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_11\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"369.6\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_5\"\u003e\n      \u003c!-- 2 --\u003e\n      \u003cg transform\u003d\"translate(365.7825 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-32\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"xtick_6\"\u003e\n     \u003cg id\u003d\"line2d_12\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"444.0\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_13\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"444.0\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_6\"\u003e\n      \u003c!-- 4 --\u003e\n      \u003cg transform\u003d\"translate(440.1825 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-34\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"xtick_7\"\u003e\n     \u003cg id\u003d\"line2d_14\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#m4cf68ff897\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_15\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#m57362aa611\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_7\"\u003e\n      \u003c!-- 6 --\u003e\n      \u003cg transform\u003d\"translate(514.5825 401.918125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-36\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"text_8\"\u003e\n     \u003c!-- x --\u003e\n     \u003cdefs\u003e\n      \u003cpath d\u003d\"M 54.890625 54.6875 \nL 35.109375 28.078125 \nL 55.90625 0 \nL 45.3125 0 \nL 29.390625 21.484375 \nL 13.484375 0 \nL 2.875 0 \nL 24.125 28.609375 \nL 4.6875 54.6875 \nL 15.28125 54.6875 \nL 29.78125 35.203125 \nL 44.28125 54.6875 \nz\n\" id\u003d\"BitstreamVeraSans-Roman-78\"/\u003e\n     \u003c/defs\u003e\n     \u003cg transform\u003d\"translate(291.64875 418.531875)scale(0.12 -0.12)\"\u003e\n      \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-78\"/\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n   \u003c/g\u003e\n   \u003cg id\u003d\"matplotlib.axis_2\"\u003e\n    \u003cg id\u003d\"ytick_1\"\u003e\n     \u003cg id\u003d\"line2d_16\"\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 0 0 \nL 4 0 \n\" id\u003d\"me381699738\" style\u003d\"stroke:#000000;stroke-width:0.5;\"/\u003e\n      \u003c/defs\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_17\"\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 0 0 \nL -4 0 \n\" id\u003d\"mf30cee38a2\" style\u003d\"stroke:#000000;stroke-width:0.5;\"/\u003e\n      \u003c/defs\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"388.8\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_9\"\u003e\n      \u003c!-- −15 --\u003e\n      \u003cdefs\u003e\n       \u003cpath d\u003d\"M 12.40625 8.296875 \nL 28.515625 8.296875 \nL 28.515625 63.921875 \nL 10.984375 60.40625 \nL 10.984375 69.390625 \nL 28.421875 72.90625 \nL 38.28125 72.90625 \nL 38.28125 8.296875 \nL 54.390625 8.296875 \nL 54.390625 0 \nL 12.40625 0 \nz\n\" id\u003d\"BitstreamVeraSans-Roman-31\"/\u003e\n       \u003cpath d\u003d\"M 10.796875 72.90625 \nL 49.515625 72.90625 \nL 49.515625 64.59375 \nL 19.828125 64.59375 \nL 19.828125 46.734375 \nQ 21.96875 47.46875 24.109375 47.828125 \nQ 26.265625 48.1875 28.421875 48.1875 \nQ 40.625 48.1875 47.75 41.5 \nQ 54.890625 34.8125 54.890625 23.390625 \nQ 54.890625 11.625 47.5625 5.09375 \nQ 40.234375 -1.421875 26.90625 -1.421875 \nQ 22.3125 -1.421875 17.546875 -0.640625 \nQ 12.796875 0.140625 7.71875 1.703125 \nL 7.71875 11.625 \nQ 12.109375 9.234375 16.796875 8.0625 \nQ 21.484375 6.890625 26.703125 6.890625 \nQ 35.15625 6.890625 40.078125 11.328125 \nQ 45.015625 15.765625 45.015625 23.390625 \nQ 45.015625 31 40.078125 35.4375 \nQ 35.15625 39.890625 26.703125 39.890625 \nQ 22.75 39.890625 18.8125 39.015625 \nQ 14.890625 38.140625 10.796875 36.28125 \nz\n\" id\u003d\"BitstreamVeraSans-Roman-35\"/\u003e\n      \u003c/defs\u003e\n      \u003cg transform\u003d\"translate(42.674375 392.11125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cuse x\u003d\"83.7890625\" xlink:href\u003d\"#BitstreamVeraSans-Roman-31\"/\u003e\n       \u003cuse x\u003d\"147.412109375\" xlink:href\u003d\"#BitstreamVeraSans-Roman-35\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_2\"\u003e\n     \u003cg id\u003d\"line2d_18\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"339.428571429\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_19\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"339.428571429\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_10\"\u003e\n      \u003c!-- −10 --\u003e\n      \u003cg transform\u003d\"translate(42.674375 342.739821429)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cuse x\u003d\"83.7890625\" xlink:href\u003d\"#BitstreamVeraSans-Roman-31\"/\u003e\n       \u003cuse x\u003d\"147.412109375\" xlink:href\u003d\"#BitstreamVeraSans-Roman-30\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_3\"\u003e\n     \u003cg id\u003d\"line2d_20\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"290.057142857\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_21\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"290.057142857\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_11\"\u003e\n      \u003c!-- −5 --\u003e\n      \u003cg transform\u003d\"translate(50.309375 293.368392857)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-2212\"/\u003e\n       \u003cuse x\u003d\"83.7890625\" xlink:href\u003d\"#BitstreamVeraSans-Roman-35\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_4\"\u003e\n     \u003cg id\u003d\"line2d_22\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"240.685714286\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_23\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"240.685714286\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_12\"\u003e\n      \u003c!-- 0 --\u003e\n      \u003cg transform\u003d\"translate(60.365 243.996964286)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-30\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_5\"\u003e\n     \u003cg id\u003d\"line2d_24\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"191.314285714\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_25\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"191.314285714\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_13\"\u003e\n      \u003c!-- 5 --\u003e\n      \u003cg transform\u003d\"translate(60.365 194.625535714)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-35\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_6\"\u003e\n     \u003cg id\u003d\"line2d_26\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"141.942857143\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_27\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"141.942857143\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_14\"\u003e\n      \u003c!-- 10 --\u003e\n      \u003cg transform\u003d\"translate(52.73 145.254107143)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-31\"/\u003e\n       \u003cuse x\u003d\"63.623046875\" xlink:href\u003d\"#BitstreamVeraSans-Roman-30\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_7\"\u003e\n     \u003cg id\u003d\"line2d_28\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"92.5714285714\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_29\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"92.5714285714\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_15\"\u003e\n      \u003c!-- 15 --\u003e\n      \u003cg transform\u003d\"translate(52.73 95.8826785714)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-31\"/\u003e\n       \u003cuse x\u003d\"63.623046875\" xlink:href\u003d\"#BitstreamVeraSans-Roman-35\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"ytick_8\"\u003e\n     \u003cg id\u003d\"line2d_30\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"72.0\" xlink:href\u003d\"#me381699738\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"line2d_31\"\u003e\n      \u003cg\u003e\n       \u003cuse style\u003d\"stroke:#000000;stroke-width:0.5;\" x\u003d\"518.4\" xlink:href\u003d\"#mf30cee38a2\" y\u003d\"43.2\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n     \u003cg id\u003d\"text_16\"\u003e\n      \u003c!-- 20 --\u003e\n      \u003cg transform\u003d\"translate(52.73 46.51125)scale(0.12 -0.12)\"\u003e\n       \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-32\"/\u003e\n       \u003cuse x\u003d\"63.623046875\" xlink:href\u003d\"#BitstreamVeraSans-Roman-30\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n    \u003cg id\u003d\"text_17\"\u003e\n     \u003c!-- y --\u003e\n     \u003cdefs\u003e\n      \u003cpath d\u003d\"M 32.171875 -5.078125 \nQ 28.375 -14.84375 24.75 -17.8125 \nQ 21.140625 -20.796875 15.09375 -20.796875 \nL 7.90625 -20.796875 \nL 7.90625 -13.28125 \nL 13.1875 -13.28125 \nQ 16.890625 -13.28125 18.9375 -11.515625 \nQ 21 -9.765625 23.484375 -3.21875 \nL 25.09375 0.875 \nL 2.984375 54.6875 \nL 12.5 54.6875 \nL 29.59375 11.921875 \nL 46.6875 54.6875 \nL 56.203125 54.6875 \nz\n\" id\u003d\"BitstreamVeraSans-Roman-79\"/\u003e\n     \u003c/defs\u003e\n     \u003cg transform\u003d\"translate(35.17875 219.55125)rotate(-90.0)scale(0.12 -0.12)\"\u003e\n      \u003cuse xlink:href\u003d\"#BitstreamVeraSans-Roman-79\"/\u003e\n     \u003c/g\u003e\n    \u003c/g\u003e\n   \u003c/g\u003e\n  \u003c/g\u003e\n \u003c/g\u003e\n \u003cdefs\u003e\n  \u003cclipPath id\u003d\"p1be21defc0\"\u003e\n   \u003crect height\u003d\"345.6\" width\u003d\"446.4\" x\u003d\"72.0\" y\u003d\"43.2\"/\u003e\n  \u003c/clipPath\u003e\n \u003c/defs\u003e\n\u003c/svg\u003e\n\u003c/div\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229484_-408961673",
      "id": "20161104-233454_1462963013",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "More ML Algorithms",
      "text": "%md\n\nIn this lab we have looked at Linear Regression, but there are other popular algorithms. In the following labs we\u0027ll begin exploring:\n\n- [Decision trees](https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees)\n- [Random forest](https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests)\n- [K-Means Clustering](https://spark.apache.org/docs/latest/ml-clustering.html#k-means)",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIn this lab we have looked at Linear Regression, but there are other popular algorithms. In the following labs we\u0026rsquo;ll begin exploring:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href\u003d\"https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees\"\u003eDecision trees\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests\"\u003eRandom forest\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"https://spark.apache.org/docs/latest/ml-clustering.html#k-means\"\u003eK-Means Clustering\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229485_-409346422",
      "id": "20161021-181337_384523728",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Additional Resources",
      "text": "%md\n\nWe hope you\u0027ve enjoyed this introductory lab. Below are additional resources that you should find useful:\n\n1. [Hortonworks Apache Spark Tutorials](http://hortonworks.com/tutorials/#tuts-developers) are your natural next step where you can explore Spark in more depth.\n2. [Hortonworks Community Connection (HCC)](https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Hortonworks Apache Spark Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_spark-component-guide/content/ch_developing-spark-apps.html) - official Spark documentation.\n4. [Hortonworks Apache Zeppelin Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_zeppelin-component-guide/content/ch_using_zeppelin.html) - official Zeppelin documentation.",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 10.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe hope you\u0026rsquo;ve enjoyed this introductory lab. Below are additional resources that you should find useful:\u003c/p\u003e\n\u003col\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://hortonworks.com/tutorials/#tuts-developers\"\u003eHortonworks Apache Spark Tutorials\u003c/a\u003e are your natural next step where you can explore Spark in more depth.\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion\"\u003eHortonworks Community Connection (HCC)\u003c/a\u003e is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_spark-component-guide/content/ch_developing-spark-apps.html\"\u003eHortonworks Apache Spark Docs\u003c/a\u003e - official Spark documentation.\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.5.0/bk_zeppelin-component-guide/content/ch_using_zeppelin.html\"\u003eHortonworks Apache Zeppelin Docs\u003c/a\u003e - official Zeppelin documentation.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229485_-409346422",
      "id": "20161021-162613_1357875353",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%angular\n\u003c/br\u003e\n\u003ccenter\u003e\n\u003ca href\u003d\"https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion\" target\u003d\u0027_blank\u0027\u003e\n  \u003cimg src\u003d\"http://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt\u003d\"HCC\" style\u003d\"width:125px;height:125px;border:0;\" align\u003d\"middle\"\u003e\n\u003c/a\u003e\n\u003c/center\u003e",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {},
        "colWidth": 2.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003c/br\u003e\n\u003ccenter\u003e\n\u003ca href\u003d\"https://community.hortonworks.com/spaces/85/data-science.html?type\u003dquestion\" target\u003d\u0027_blank\u0027\u003e\n  \u003cimg src\u003d\"http://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt\u003d\"HCC\" style\u003d\"width:125px;height:125px;border:0;\" align\u003d\"middle\"\u003e\n\u003c/a\u003e\n\u003c/center\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1487794229485_-409346422",
      "id": "20161021-182558_90195999",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Feb 23, 2017 1:40:29 AM",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1487794229486_-408192175",
      "id": "20161021-182620_1556029654",
      "dateCreated": "Feb 23, 2017 1:40:29 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Labs / Spark 2.x / Data Scientist / Scala / 101 - Intro to Machine Learning",
  "id": "2CCBNZ5YY",
  "angularObjects": {
    "2C9J4X9BB:shared_process": [],
    "2C97XTJFE:shared_process": [],
    "2C9BD8WCX:shared_process": [],
    "2CBT85YD7:shared_process": [],
    "2C8RGTKC3:shared_process": [],
    "2CBQNWPMD:shared_process": [],
    "2C8JDGPHH:shared_process": [],
    "2C9CSKWHY:shared_process": [],
    "2CBN9WPNN:shared_process": [],
    "2CB11VTD7:shared_process": [],
    "2C9Z4TVBW:shared_process": [],
    "2CB3RUCX8:shared_process": [],
    "2C9PSG7XP:shared_process": [],
    "2C8PPBWFC:shared_process": [],
    "2C95B7UJY:shared_process": [],
    "2CB91QEZG:shared_process": [],
    "2CAPDMDA1:shared_process": [],
    "2CACTG458:shared_process": [],
    "2CAD4U2BW:shared_process": [],
    "2CBTJTHZE:shared_process": [],
    "2C9VPGHR9:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}